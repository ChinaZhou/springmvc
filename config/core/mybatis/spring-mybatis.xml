<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop 
   						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        ">

	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="com.springmvc">
		<!-- 配置Controller不扫描 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" /> 
	</context:component-scan>
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:springmvc-context.properties" />
	</bean>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="true">
		<property name="driverClass">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<!-- 连接池中保留的最小连接数。 -->
		<property name="minPoolSize">
			<value>${jdbc.connection.min}</value>
		</property>
		<!-- 连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize">
			<value>${jdbc.connection.max}</value>
		</property>
		<!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize">
			<value>${jdbc.connection.init}</value>
		</property>
		<!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime">
			<value>${jdbc.connection.maxsave}</value>
		</property>
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement">
			<value>5</value>
		</property>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:core/mybatis/sqlmap-mybatis-config.xml"/>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:biz/mybatis/*.xml"></property>
	</bean> 
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">         
		<constructor-arg index="0" ref="sqlSessionFactory" />   
	</bean>
	
	<!-- 事务配置  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="globalRollbackOnParticipationFailure" value="false" />
	</bean>
	
	<!-- 自定义aop测试 -->
	<bean id="aopTest" class="com.springmvc.comm.aop.AopTest"/>
	<aop:config>
		<aop:aspect id="myAop" ref="aopTest">
			<aop:pointcut expression="execution(* com.springmvc.*.service.*.*(..))" id="target"/>
			<aop:before method="before()" pointcut-ref="target"/>
			<aop:after method="after()" pointcut-ref="target"/>
		</aop:aspect>
	</aop:config>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 配置文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>
	
	<!-- 全局异常配置 start -->
	<bean id="exceptionResolver" class="com.springmvc.comm.exception.CommonExceptionResolver">
		<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->
		<property name="exceptionMappings">
			<props>
				<!-- 表示当抛出java.lang.Exception的时候就返回名叫/index/error的视图 -->
				<prop key="java.lang.Exception">/index/error</prop>
				<prop key="java.lang.Throwable">/index/error</prop>
			</props>
		</property>
		<!-- 定义在发生异常时视图跟返回码的对应关系 -->
		<property name="statusCodes">
			<props>
				<!-- 表示在发生java.lang.Exception时返回视图/index/error，
					然后这里定义发生异常时视图/index/error对应的HttpServletResponse的返回码是500 -->  
				<prop key="/index/error">500</prop>
				<prop key="/index/error">404</prop>
			</props>	
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="ERROR"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="/index/error"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>
	<!-- 全局异常配置 end -->

</beans>  